import{B as e}from"./index-D0hxrqC2.js";import{u as s}from"./useNotyf-NZFZ9G1y.js";import{a as r}from"./useFetch-Bhw7oTLc.js";const t=e("defaultResource",(()=>{const e=s(),t=r();return{list:async(s,r)=>{try{const e=await t(s);return r?{data:e.items,total:e.totalItems}:e}catch(a){const s=`Une erreur est survenue : ${a.message} - ${a.response?.data?.message}`;e?.error(s)}},listUser:async s=>{try{return await t(s,{method:"GET"})}catch(r){const s=`Une erreur est survenue : ${r.message} - ${r.response?.data?.message}`;e?.error(s)}},find:async(s,r)=>{try{return await t(`${s}/${r}`)}catch(a){const s=`Une erreur est survenue : ${a.message} - ${a.response?.data?.message}`;e.error(s)}},add:async(s,r)=>{try{return await t(`${s}`,{method:"POST",body:r})}catch(a){const s=`Une erreur est survenue : ${a.message} - ${a.response?.data?.message}`;e.error(s),console.log(s)}},edit:async(s,r)=>{try{return await t(`${s}`,{method:"PUT",body:r})}catch(a){const s=a.response?._data?.message||a.response?.data?.message||a.data?.message||"An unknown error occurred",r=`Error editing item (Status: ${a.response?.status||a.statusCode||"N/A"}): ${s}`;return e.error(r),void console.error("Edit error details:",r)}},editStatut:async s=>{try{return await t(`${s}`,{method:"PUT"})}catch(r){const s=r.response?._data?.message||r.response?.data?.message||r.data?.message||"An unknown error occurred",t=`Error editing item (Status: ${r.response?.status||r.statusCode||"N/A"}): ${s}`;return e.error(t),void console.error("Edit error details:",r)}},editPassword:async(s,r)=>{try{console.log(r);const a=s;console.log("Sending password reset request to:",a,"with payload:",r);const o=await t(a,{method:"PUT",params:{email:r.email,password:r.password}});return e.success(o?.message||"Password updated successfully!"),o}catch(a){const s=a.response?._data?.message||a.response?.data?.message||a.data?.message||"An unknown error occurred",r=`Password update failed (Status: ${a.response?.status||a.statusCode||"N/A"}): ${s}`;return e.error(r),void console.error("Password update error details:",a)}},updateRoles:async(s,r)=>{try{return await t(`${s}`,{method:"PUT",body:r})}catch(a){const s=`Une erreur est survenue : ${a.message} - ${a.response?.data?.message}`;e.error(s)}},remove:async(s,r)=>{try{return await t(`${s}/${r}`,{method:"DELETE"})}catch(a){const s=`Une erreur est survenue : ${a.message} - ${a.response?.data?.message}`;e.error(s)}}}}));export{t as u};
